def dfs(start):
    global visit
    stack = [start]
    if start not in G:
        return
    while stack:
        node = stack.pop()
        if not visit[node]:
            visit[node] = True
            stack.extend(G[node])
    return


node_num, edge_num = map(int,input().split())
G = {}
for i in range(edge_num):
    n1, n2 = map(int,input().split())
    if n1 not in G: G[n1] = [n2]
    else: G[n1] += [n2]

    if n2 not in G: G[n2] = [n1]
    else: G[n2] += [n1]
cnt = 0
visit = {}
for i in range(1,node_num+1):
    visit[i] = False

for key in visit:
    if not visit[key]:
        dfs(key)
        cnt += 1
print(cnt)
