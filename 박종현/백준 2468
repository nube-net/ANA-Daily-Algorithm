from collections import deque

def BFS(q : deque, height): #지도에서 침수되는 곳은 다 지워버리는 함수
    while q:
        y, x = q.popleft()
        dy, dx = [0, 1, 0, -1], [1, 0, -1, 0]  # 동 남 서 북
        for dirc in range(4):
            ny, nx = y+dy[dirc], x+dx[dirc]
            if 0<=ny and ny<n and 0<=nx and nx<n:
                if tempMAP[ny][nx] > height:
                    tempMAP[ny][nx] = 0
                    q.append((ny, nx))
    return 1


n = int(input())
MAP = [list(map(int, input().split())) for _ in range(n)]

ans = 0
for height in range(101): # height = 침수 높이
    tmpAns = 0
    tempMAP = [[0]*n for _ in range(n)]
    for i in range(n):
        for j in range(n):
            tempMAP[i][j] = MAP[i][j]

    for i in range(n):
        for j in range(n):
            if tempMAP[i][j] > height:
                q = deque()
                q.append((i,j))
                tmpAns += BFS(q, height)
    ans = max(ans, tmpAns)
print(ans)
