from collections import deque

k = int(input())
n, m = map(int, input().split())
grid = [list(input().split()) for _ in range(m)]

q = deque()
q.append((0, 0, 0, 0))
visited = [[[0 for i in range(n)] for ii in range(m)] for iii in range(k + 1)]
# 북 동 남 서
dy, dx = [-1, 0, 1, 0], [0, 1, 0, -1]
# 북북동 북동동 남동동 남남동 남남서 남서서 북서서 북북서
jy, jx = [-2, -1, 1, 2, 2, 1, -1, -2], [1, 2, 2, 1, -1, -2, -2, -1]
visited[0][0][0] = 1  # 방문
while q:
    y, x, jump, move = q.popleft()
    # print(y, x, jump, move)
    if y == m - 1 and x == n - 1:
        print(move)
        break

    for i in range(4):
        ny, nx = y + dy[i], x + dx[i]
        if 0 <= ny and ny < m and 0 <= nx and nx < n:
            # print("범위 내", jump, ny, nx, ", 방문여부:",visited[jump][ny][nx],", grid[ny][nx]:", grid[ny][nx])
            if visited[jump][ny][nx] == 0 and grid[ny][nx] == '0':
                visited[jump][ny][nx] = 1
                q.append((ny, nx, jump, move + 1))

    if jump < k:
        for j in range(8):
            ny, nx = y + jy[j], x + jx[j]
            if 0 <= ny and ny < m and 0 <= nx and nx < n:
                if visited[jump + 1][ny][nx] == 0 and grid[ny][nx] == '0':
                    visited[jump + 1][ny][nx] = 1
                    q.append((ny, nx, jump + 1, move + 1))
else:
    print(-1)
